name: CI - Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop
      - feature/*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests esptool

      - name: Set Build Number in platformio.ini
        run: sed -i "s/\[_BUILD_NUMBER_\]/${{ vars.CURRENT_VERSION }}.${{ github.run_number }}/g" platformio.ini

      - name: Install PlatformIO Core
        run: |
          pip install platformio
          platformio update

      - name: Build Project
        run: |
          platformio run
          platformio run --target buildfs

      - name: Merge output binaries files
        run: |
              esptool.py --chip esp32 merge_bin -o .pio/build/m5stack-cplus1_1/release.bin    --flash_mode dio --flash_size 4MB 0x1000 .pio/build/m5stack-cplus1_1/bootloader.bin 0x8000  .pio/build/m5stack-cplus1_1/partitions.bin  0x10000 .pio/build/m5stack-cplus1_1/firmware.bin  0x210000 .pio/build/m5stack-cplus1_1/littlefs.bin
              esptool.py --chip esp32 merge_bin -o .pio/build/m5stack-cplus2/release.bin      --flash_mode dio --flash_size 8MB 0x1000 .pio/build/m5stack-cplus2/bootloader.bin 0x8000    .pio/build/m5stack-cplus2/partitions.bin    0x10000 .pio/build/m5stack-cplus2/firmware.bin    0x670000 .pio/build/m5stack-cplus2/littlefs.bin
              esptool.py --chip esp32s3 merge_bin -o .pio/build/m5stack-cardputer/release.bin --flash_mode dio --flash_size 8MB 0x0000 .pio/build/m5stack-cardputer/bootloader.bin 0x8000 .pio/build/m5stack-cardputer/partitions.bin 0x10000 .pio/build/m5stack-cardputer/firmware.bin 0x670000 .pio/build/m5stack-cardputer/littlefs.bin
        
      - name: Rename release.bin files
        run: |
          for file in $(find .pio/build/**/ -name 'release.bin'); do
            env=$(basename $(dirname "$file"))
            new_name="OrcaOne_${env}_${{ vars.CURRENT_VERSION }}.${{ github.run_number }}.bin"
            mv "$file" "$(dirname "$file")/$new_name"
          done
          chmod +r .pio/build/**/OrcaOne*.bin
          ls .pio/build/**/OrcaOne*.bin

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          path: .pio/build/**/OrcaOne*.bin
